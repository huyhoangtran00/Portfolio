# ./nginx/nginx.conf

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Định nghĩa upstream cho dịch vụ React Frontend đã được build
    # 'frontend' là tên dịch vụ từ docker-compose.yml
    # '80' là cổng mà Nginx bên trong container 'frontend' đang phục vụ các tệp tĩnh
    upstream frontend_service {
        server frontend:80;
    }

    # Định nghĩa upstream cho dịch vụ FastAPI Backend
    # 'backend' là tên dịch vụ từ docker-compose.yml
    # '8000' là cổng mà ứng dụng FastAPI của bạn lắng nghe
    upstream backend_service {
        server backend:8000;
    }

    server {
        listen 80; # Nginx này sẽ lắng nghe trên cổng 80 bên trong container (được map ra cổng 46000 bên ngoài)
        server_name localhost; # Hoặc tên miền thực tế của bạn nếu có

        # Proxy các yêu cầu API đến backend FastAPI
        location /api/ {
            proxy_pass http://backend_service/; # Sử dụng upstream đã định nghĩa
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Phục vụ ứng dụng React frontend cho tất cả các yêu cầu còn lại
        location / {
            proxy_pass http://frontend_service/; # Sử dụng upstream đã định nghĩa
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # --- Bổ sung quan trọng cho SPA như React / Vite ---
            # Nếu URL không khớp với một tệp vật lý, Nginx sẽ trả về /index.html
            # để React Router xử lý định tuyến phía client.
            try_files $uri $uri/ /index.html;
        }
    }
}